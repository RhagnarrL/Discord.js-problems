So basicly im having trouble with this one idk why it keep saying that 
C:\Users\Ragnar.Ragnar-PC.001\Desktop\NX-BOT\index.js:86
client.login(config.token);
^

ReferenceError: client is not defined
    at Object.<anonymous> (C:\Users\Ragnar.Ragnar-PC.001\Desktop\NX-BOT\index.js:86:1)
    at Module._compile (module.js:641:30)
    at Object.Module._extensions..js (module.js:652:10)
    at Module.load (module.js:560:32)
    at tryModuleLoad (module.js:503:12)
    at Function.Module._load (module.js:495:3)
    at Function.Module.runMain (module.js:682:10)
    at startup (bootstrap_node.js:191:16)
    at bootstrap_node.js:613:3
Is wrong for some reason but the token is writen in a differeant file with the name refered in this file config.json but it still keep
saying that its not defined any help?

// THIS IS MY CODE //

const Discord = require("discord.js");
const Client = new Discord.Client();

const config = require("./config.json");

Client.on("ready", () => {
  console.log('Bot has started, with ${client.users.size} users, in ${client.channels.size} channels of ${client.guilds.size} guild. ');
  client.user.setGame('on ${client.guilds.size} servers');
});

Client.on("guildCreate", guild => {
  console.log('New guild joined: ${guild.name} (id: ${guild.id}. This guild has ${guild.memberCount} members!');
  client.user.setGame('on ${client.guilds.size} servers');
});

Client.on("guildDelete", guild => {
  console.log('I have been removed from: ${guild.name} (id: ${guild.id})');
  client.user.setGame('on ${client.guilds.size} servers');
});

Client.on("message", async message => {
  if(message.authos.bot) return;
  if(message.content.indexOf(config.prefix) !== 0) return;

  const args = message.content.slice(config.prefix.length).trim().split(/ +/g);
  const comand = args.shift().toLowerCase();

  if(command === "ping") {
    const m = await message.channel.send("Ping?");
    m.edit('Pong! Latency is ${m.createdTimestamp - message.createdTimestamp}ms. API Latency is ${Math.round(client.ping)}ms');
  }

  if(command === "say") {
    const sayMessage = args.join.join(" ");
    message.delete().catch(O_o=>{});
    message.channel.send(sayMessage);
  }

  if(comand === "kick") {
    if(!message.member.roles.some(r=>["Administrator", "Moderator"].includes(r.name)) )
    return message.reply("Sorry, you don't have permissions to use this!");

    let member = message.mentions.member.first();
    if(!member)
      return message.reply("I cannot kick this user! Do they have a higher role? Do I have a kick permissions?");

    let reason = args.slice(1).join(' ');
    if(!reason)
      return message.reply("Please indicate a reason for the kick!");

      await member.kick(reason)
        .catch(error => message.reply('Sorry ${message.author} I couldn`t kick because of : ${error}'));
      message.reply('${member.user.tag} has been kicked by ${message.author.tag} because: ${reason}');

  }

  if(command === "ban") {
    if(!message.member.role.some(r=>["Administrator"].includes(r.name)) )
      return message.reply("Sorry, you don`t have permissions to use this!");

    let member = message.mentions.members.first();
    if(!member)
      return message.reply("I cannot ban this user! Do they have a higher role? Do I have a ban permissions?");

    let reason = args.slice(1).join(' ');
    if(!reason)
      return message.reply("Please indicate a reason for the band!");

    await member.ban(reason)
      .catch(error => message.reply('Sorry ${message.author} I couldn`t ban because of : ${error}'));
    message.reply('${member.user.tag} has been banned by ${message.author.tag} because: ${reason}');
  }

  if(command === "purge") {
    const deleteCount = parseInt(args[0], 10);

    if(!deleteCount || deleteCount < 2 || deleteCount > 100)
      return message.reply("Please provide a number between 2 and 100 for the number of messages to delete");

    const fetched = await message.channel.fetchMessages({count: deleteCount});
    message.channel.bulkDelete(fetched)
        .carth(error => message.reply('Couldn`t delete messages because of: ${error}'));
  }
});

client.login(config.token);

// THIS IS MY CODE //
